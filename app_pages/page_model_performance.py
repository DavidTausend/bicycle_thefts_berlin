import streamlit as st
import pandas as pd
import os


def page_model_performance_body() -> None:
    """
    Render the Model Performance page.

    This page displays performance metrics and a sample of predictions
    generated by the machine learning model.
    """
    st.title("Model Performance")

    # Define the path to the predictions file
    predictions_path = (
        "/workspace/bicycle_thefts_berlin/jupyter_notebooks/"
        "predictions.csv"
    )

    # Check if the file exists
    if not os.path.exists(predictions_path):
        st.error(
            "Predictions file not found. Ensure 'predictions.csv' exists in "
            "the '/workspace/bicycle_thefts_berlin/jupyter_notebooks/outputs/"
            "models/' directory."
        )
        return

    # Load the predictions
    try:
        predictions_df = pd.read_csv(predictions_path)
    except Exception as e:
        st.error(
            "Error reading predictions file: {error}".format(error=e)
        )
        return

    # Ensure required columns are present
    required_columns = {"Actual", "Predicted"}
    if not required_columns.issubset(predictions_df.columns):
        st.error(
            "The predictions file must contain 'Actual' and 'Predicted' "
            "columns."
        )
        return

    # Display basic performance metrics
    st.write("### Model Performance Metrics")

    # Example performance calculation (replace with actual metrics)
    accuracy = (
        (predictions_df["Actual"] == predictions_df["Predicted"])
        .mean()
    )
    st.metric("Accuracy", f"{accuracy:.2%}")

    # Display a sample of the predictions
    st.write("### Sample Predictions")
    st.dataframe(predictions_df.head())
